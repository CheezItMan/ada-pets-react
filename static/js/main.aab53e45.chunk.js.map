{"version":3,"sources":["speciesEmoji.js","components/PetCard.js","components/PetList.js","components/PetDetails.js","components/SearchBar.js","components/NewPetForm.js","App.js","serviceWorker.js","index.js"],"names":["speciesEmoji","species","PetCard","props","id","name","about","location","react_default","a","createElement","className","onClick","selectPetCallback","deletePetCallback","type","aria-label","length","concat","substring","PetList","petList","pets","map","pet","src_components_PetCard","Object","assign","key","PetDetails","_props$currentPet","currentPet","images","src","alt","SearchBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","searchValue","target","value","state","onChange","placeholder","Component","NewPetForm","resetState","image","onFormChange","field","updatedState","onSubmit","preventDefault","_this$state","console","log","addPetCallback","htmlFor","App","onSelectPet","petId","selectedPet","find","regex","RegExp","toUpperCase","filter","test","addPet","newPet","reduce","max","arguments","undefined","Math","push","removePet","deleteIndex","forEach","index","splice","details","src_components_PetDetails","src_components_SearchBar","components_PetList","src_components_NewPetForm","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aab53e45.chunk.js","sourcesContent":["\nconst speciesEmoji = (species) => {\n  \n  if (species === 'cat') {\n    return '\\ud83d\\udc08';\n  }\n  else if (species === 'dog') {\n    return '\\ud83d\\udc15';\n  }\n  else {\n    return '\\u2753';\n  }\n};\n\nexport default speciesEmoji;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './PetCard.css';\n\nimport speciesEmoji from '../speciesEmoji';\n\n\nconst PetCard = (props) => {\n  const { id, name, species, about, location } = props;\n  return (\n    <div className=\"card pet-card\">\n\n      <section className=\"pet-card--header\">\n      { speciesEmoji(species) } {id} - {name} \n        <button \n          onClick={() => {props.selectPetCallback(props.id)}} \n          className=\"btn btn-primary pet-card--select-pet-btn\"\n          >\n            Select\n        </button>\n        <button \n          onClick={() => props.deletePetCallback(props.id)}\n          type=\"button\" \n          className=\"btn btn-danger pet-card--close-btn\" \n          aria-label=\"Close\"\n        >\n          Remove\n        </button>\n      </section>\n      <section className=\"pet-card--body\">\n        { about.length > 128 ? `${about.substring(0, 128)}...` : about}\n      </section>\n      <section className=\"pet-card--footer text-muted\">\n        {location}\n      </section>\n    </div>\n  );\n};\n    \nPetCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired, \n  species: PropTypes.string.isRequired, \n  about: PropTypes.string, \n  location: PropTypes.string,\n  deletePetCallback: PropTypes.func.isRequired,\n  selectPetCallback: PropTypes.func.isRequired,\n}\n    \nexport default PetCard;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PetCard from './PetCard';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst PetList = (props) => {\n  const petList = props.pets.map((pet) => {\n    return <PetCard key={pet.id} \n             deletePetCallback={props.deletePetCallback}\n             selectPetCallback={props.selectPetCallback} \n             {...pet} />\n  });\n\n  return (\n    <div className=\"card-group\">\n      {petList}\n    </div>\n  )\n}\n\nPetList.propTypes = {\n  pets: PropTypes.array.isRequired,\n  onSelectPet: PropTypes.func,\n};\n\nexport default PetList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport speciesEmoji from '../speciesEmoji';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './PetDetails.css';\n\nconst PetDetails = (props) => {\n  const { name, location, about, species, images } = props.currentPet;\n  return (\n    <section className=\"pet-details\">\n      <section className=\"pet-details--header\">\n        <h2 className=\"pet-details--name\">{speciesEmoji(species)} {name} {speciesEmoji(species)}</h2>\n        <img src={images[0]} alt={`${name}`} className=\"pet-details--image\" />\n      </section>\n      <article className=\"pet-details--content\">\n        <h3>About {name}</h3>\n        <p>\n          {about}\n        </p>\n      </article>\n      <footer className=\"text-muted pet-location\">\n        {location}\n      </footer>\n    </section>\n  )\n}\n\nPetDetails.propTypes = {\n  currentPet: PropTypes.shape({\n    about: PropTypes.string.isRequired,\n    images: PropTypes.array.isRequired,\n    location: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    species: PropTypes.string.isRequired,\n  }),\n}\nexport default PetDetails;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchValue: '',\n    };\n  }\n\n  onSearchChange = (event) => {\n    this.setState({\n      searchValue: event.target.value,\n    });\n\n    this.props.onSearchChange(event.target.value);\n  }\n\n  render() {\n    return (\n      <section>\n        <input \n          onChange={this.onSearchChange}\n          value={this.state.searchValue}\n          name=\"search-bar\"\n          className=\"search-bar\"\n          placeholder=\"Filter Pets\"\n        />\n      </section>\n    );\n  }\n};\n\nSearchBar.propTypes = {\n  onSearchChange: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './NewPetForm.css'\n\nclass NewPetForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      about: '',\n      location: '',\n      name: '',\n      species: '',\n      image: '',\n    };\n  }\n\n  resetState = () => {\n    this.setState({\n      about: '',\n      location: '',\n      name: '',\n      species: '',\n      image: '',\n    });\n  }\n\n  onFormChange = (event) => {\n    const field = event.target.name;\n    const value = event.target.value;\n    \n    const updatedState = {};\n    updatedState[field] = value;\n    this.setState(updatedState);\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { name, species, image } = this.state;\n    \n    if (name === '' || species === '' || image === '') return;\n\n    console.log(event);\n    const pet = this.state;\n    pet.images = [this.state.image];\n    this.props.addPetCallback(pet);\n    this.resetState();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} name=\"new-pet-form\" id=\"new-pet-form\" className=\"new-pet-form\">\n        <div>\n          <label className=\"new-pet-form--label\" htmlFor=\"Name\">Name</label>\n          <input name=\"name\" placeholder=\"name\" onChange={this.onFormChange} value={this.state.name} />\n        </div>\n        <div>\n          <label className=\"new-pet-form--label\" htmlFor=\"species\">Species</label>\n          <input name=\"species\" placeholder=\"species\" onChange={this.onFormChange} value={this.state.species} />\n        </div>\n        <div>\n          <label className=\"new-pet-form--label\" htmlFor=\"location\">Location</label>\n          <input name=\"location\" placeholder=\"location\" onChange={this.onFormChange} value={this.state.location} />\n        </div>\n        <div>\n          <label className=\"new-pet-form--label\" htmlFor=\"image\">Image</label>\n          <input name=\"image\" placeholder=\"image link\" onChange={this.onFormChange} value={this.state.image} />\n        </div>\n        <div>\n          <label className=\"new-pet-form--label\" htmlFor=\"about\">About</label>\n        </div>\n        <div>\n          <textarea className=\"new-pet-form--about\" name=\"about\" onChange={this.onFormChange} value={this.state.about}></textarea>\n        </div>\n        <input className=\"btn btn-success new-pet-form--submit\" type=\"submit\" name=\"submit\" value=\"Add a Pet\" />\n      </form>\n    );\n  }\n\n\n}\n\nNewPetForm.propTypes = {\n  addPetCallback: PropTypes.func.isRequired,\n};\n\nexport default NewPetForm;","import React, { Component } from 'react';\nimport PetList from './components/PetList';\nimport PetDetails from './components/PetDetails';\nimport SearchBar from './components/SearchBar';\nimport NewPetForm from './components/NewPetForm';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport pets from './data/pets.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const petList = pets.map((pet) => {\n      pet.currentPet = 0;\n      return pet;\n    });\n\n    this.state = {\n      petList,\n      currentPet: undefined,\n    };\n  }\n\n  onSelectPet = (petId) => {\n    \n    const selectedPet = this.state.petList.find((pet) => {\n      return pet.id === petId;\n    });\n    if (selectedPet) {\n      this.setState({\n        currentPet: selectedPet,\n      });\n    }\n  }\n\n  onSearchChange = (value) => {\n    console.log(value);\n    const regex = new RegExp(`${value}`.toUpperCase());\n    const petList = pets.filter((pet) => {\n      return regex.test(`${pet.name}${pet.about}${pet.species}`.toUpperCase());\n    });\n\n    this.setState({\n      petList,\n    });\n  }\n\n  addPet = (newPet) => {\n    newPet.id = pets.reduce((max = 0, currentPet) => max ? Math.max(max, currentPet.id): currentPet.id) + 1\n    pets.push(newPet);\n    this.setState({\n      petList: pets,\n    });\n  }\n\n  removePet = (petId) => {\n    let deleteIndex = -1;\n    pets.forEach((pet, index) => {\n      if (petId === pet.id) {\n        deleteIndex = index;\n      }\n    });\n    \n    pets.splice(deleteIndex, 1);\n\n    this.setState({\n      petList: pets,\n    })\n  }\n\n  render() {\n    const { currentPet } = this.state;\n    console.log(this.state.petList);\n    \n    const details = currentPet ? <PetDetails currentPet={currentPet} /> : '';\n\n    return (\n      <main className=\"App\">\n        <header className=\"app-header\">\n          <h1>Ada Pets</h1>\n        </header>\n        <section className=\"search-bar\">\n          <SearchBar onSearchChange={this.onSearchChange} />\n        </section>\n         {details}\n        <section className=\"pet-list\">\n          <PetList \n            selectPetCallback={this.onSelectPet} \n            deletePetCallback={this.removePet}\n            pets={this.state.petList} \n          />\n        </section>\n        <section>\n          <NewPetForm addPetCallback={this.addPet} />\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}